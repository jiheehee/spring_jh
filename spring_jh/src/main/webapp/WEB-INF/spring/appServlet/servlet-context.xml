<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:websocket="http://www.springframework.org/schema/websocket"
   xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
      http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
   	
   	<!-- @Controller클래스를 검색하게 하는 태그 설정 -> 컨트롤러를 등록해놓고 핸들러가 이걸 찾아서 연결해주게 함 -->
   	<annotation-driven />
   	
   	<resources mapping="/resources/**" location="/resources"/>
   	
   	<!-- 기본 viewresolver 구현체 등록 -->
   	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
   		<beans:property name="prefix" value="/WEB-INF/views/"/>
   		<beans:property name="suffix" value=".jsp"/>
   	</beans:bean>   
   	
   	<!-- 어노테이션으로 등록된 클래스 찾는 설정 -->
   	<!-- spring bean을 component라고도 한다. -->
   	<!-- 그거를 어디서부터 찾아내라고 정해주는거임 ex) com.bs면 이거 밑에있는 패키지 다에서 찾아냄  -->
   	<!-- 그니까 뭐냐면 bean파일 어디부터 적용할건지 알려주는거임 . 
   	우리 패키지명이 com.bs.spring.beantest.controller 이렇게 되어있으니까  "com.bs.spring"/ 이거 되어있ㄲ는 
   	하위 파일들 다 찾아 이말 -->
   	<context:component-scan base-package="com.bs.spring"/>
   	
   	<!-- 
   		pojo클래스 bean으로 등록하기
   		<beans:bean> 태그를 이용
   		속성 
   		id : 등록된 bean이름
   		class : 대상이 되는 클래스(패키지명.클래스명)   		
   	-->
   	
   	<!-- default 생성자를 이용해서 생성 -->
   	<!-- 서버를 올리면 id값으로 불러와서 class에 설정한 객체가 생성됨 -->
   	<!-- <beans:bean id="obok" class="com.bs.spring.beantest.Animal"/> --> <!-- 기본생성자 이용해서 선언 -->
   	
   	<!-- 
   		원하는 값을 객체 bean에 저장하기 -> 필드에 값을 저장하기 
   		1. setter를 이용해서 저장하기 -> <beans:property name="필드명" value="대입값">  ~> 타입 명시하지 않음! 알아서 들어옴
   		2. 매개변수 있는 생성자에 넣기 -> <beans:constructor-arg index="" value="">  arg는 argument의 약자
   	 -->
   	
<!--    	<beans:bean id="obok" class="com.bs.spring.beantest.Animal">
   		<beans:property name="name" value="오복스"/>
   		<beans:property name="age" value="2"/>
   	</beans:bean> -->
   	
   	<beans:bean id="obok" class="com.bs.spring.beantest.Animal">
   		<beans:constructor-arg index="0" value="오순"/>
   		<beans:constructor-arg index="1" value="2"/>
   		<beans:constructor-arg index="2" value="16"/>
   	</beans:bean>
	<beans:bean id="dosoon" class="com.bs.spring.beantest.Animal">
		<beans:property name="name" value="도순"/>
	</beans:bean>
   	
   	<!-- 의존관계를 갖는 클래스 bean으로 등록하기 -->
   	<beans:bean id="p" class="com.bs.spring.beantest.Person"
   				init-method="init" 
   				destroy-method="destroyTest"> <!-- Person에 등록된 method들 넣기 -->
   		<beans:property name="a" ref="obok" /> <!-- ref자리에는 다른 객체를 참고하고 있는 bean이고, 여기 안에는 그 id값 쓰면 된당 !  -->   		   	
   	</beans:bean>
   	
   	<beans:bean id="p2" class="com.bs.spring.beantest.Person"
   		init-method="init">
   		<beans:constructor-arg index="0" value="최헌수"/>
   		<beans:constructor-arg index="1" value="24"/>
   		<beans:constructor-arg index="2" ref="obok"/> <!-- Q) 이건 머에용? -->
   	</beans:bean>
   	
   	<!-- 인터셉터등록하기 -->
   	<!-- 1. 인터셉터구현체 구현클래스 springbean으로 등록 -->
   	<beans:bean id="basicInter" 
   			class="com.bs.spring.common.interceptors.BasicInterceptor"/>
   			
   	<!-- 2. 인터셉터 설정하기 -->
   	<interceptors>
		<interceptor>
			<mapping path="/member/*"/>
			<beans:ref bean="basicInter"/>
		</interceptor>   	
   	
<!-- 	   	<interceptor>
	   		<mapping path="/demo/*"/> -->
<!-- 	   		<exclude-mapping path="/demo/demo.do"/> 얘외시킬꺼 정하기
	   		<beans:bean class="com.bs.spring.common.interceptors.LogincheckInterceptor"/>
	   	</interceptor>
	   	
	   <interceptor>
	   		<mapping path="/memo/*"/>
	   		<beans:bean class="com.bs.spring.common.interceptors.LogincheckInterceptor"/>
	   	</interceptor> -->
   	</interceptors>
   	
   	
   		
   	
</beans:beans>



